<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctl="clr-namespace:SleepHunter.Controls"
                    xmlns:meta="clr-namespace:SleepHunter.Metadata">

    

    <!-- Name Text Data Template -->
    <DataTemplate x:Key="NameDataTemplate">
        <Border>
            <TextBlock Style="{StaticResource ObsidianText}"
                       Text="{Binding Name}"
                       FontSize="16"
                       TextAlignment="Left"
                       TextWrapping="WrapWithOverflow"
                       Margin="0,2,0,0"/>
        </Border>
    </DataTemplate>

    <!-- Class Text Data Template -->
    <DataTemplate x:Key="ClassDataTemplate">
        <Border>
            <TextBlock Style="{StaticResource ObsidianText}"
                       Text="{Binding Class, Converter={StaticResource PlayerClassConverter}}"
                       FontSize="14"
                       TextAlignment="Center"
                       TextWrapping="WrapWithOverflow"
                       Margin="0,2,0,0"/>
        </Border>
    </DataTemplate>

    <!-- Name Text Data Template -->
    <DataTemplate x:Key="GroupDataTemplate">
        <Border>
            <TextBlock Style="{StaticResource ObsidianText}"
                       Text="{Binding GroupName}"
                       FontSize="14"
                       TextAlignment="Center"
                       TextWrapping="WrapWithOverflow"
                       Margin="0,2,0,0"/>
        </Border>
    </DataTemplate>

    <!-- Mana Data Template -->
    <DataTemplate x:Key="ManaDataTemplate">
        <Border>
            <TextBlock Name="ManaText" 
                       Style="{StaticResource ObsidianText}"
                       Text="{Binding ManaCost}"
                       FontSize="14"
                       TextAlignment="Center"
                       TextWrapping="WrapWithOverflow"
                       Margin="0,2,0,0"/>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ManaCost}" Value="0">
                <Setter TargetName="ManaText" Property="Foreground" Value="{StaticResource ObsidianDisabled}"/>
                <Setter TargetName="ManaText" Property="Text" Value="-"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Lines Data Template -->
    <DataTemplate x:Key="LinesDataTemplate">
        <Border>
            <TextBlock Name="LinesText" 
                       Style="{StaticResource ObsidianText}"
                       Text="{Binding NumberOfLines}"
                       FontSize="14"
                       TextAlignment="Center"
                       TextWrapping="WrapWithOverflow"
                       Margin="0,2,0,0"/>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding NumberOfLines}" Value="0">
                <Setter TargetName="LinesText" Property="Foreground" Value="{StaticResource ObsidianDisabled}"/>
                <Setter TargetName="LinesText" Property="Text" Value="-"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Cooldown Data Template -->
    <DataTemplate x:Key="CooldownDataTemplate">
        <Border>
            <TextBlock Name="CooldownText" 
                       Style="{StaticResource ObsidianText}"
                       Text="{Binding Cooldown, Converter={StaticResource TimeSpanConverter}, ConverterParameter=Fractional}"
                       FontSize="16"
                       TextAlignment="Center"
                       TextWrapping="WrapWithOverflow"
                       Margin="0,2,0,0"/>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Cooldown}" Value="0">
                <Setter TargetName="CooldownText" Property="Foreground" Value="{StaticResource ObsidianDisabled}"/>
                <Setter TargetName="CooldownText" Property="Text" Value="-"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Is Assail Data Template -->
    <DataTemplate x:Key="IsAssailDataTemplate">
        <Border>
            <CheckBox Name="CheckBox" 
                      Style="{StaticResource ObsidianCheckBox}" 
                      IsChecked="{Binding IsAssail}"
                      IsThreeState="False"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"/>
        </Border>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True"/>
                    <Condition Binding="{Binding ElementName=CheckBox, Path=IsChecked}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource ObsidianBackground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding ElementName=CheckBox, Path=IsChecked}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource ObsidianBackground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Opens Dialog Data Template -->
    <DataTemplate x:Key="OpensDialogDataTemplate">
        <Border>
            <CheckBox Name="CheckBox" 
                      Style="{StaticResource ObsidianCheckBox}" 
                      IsChecked="{Binding OpensDialog}"
                      IsThreeState="False"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"/>
        </Border>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True"/>
                    <Condition Binding="{Binding ElementName=CheckBox, Path=IsChecked}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource ObsidianBackground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding ElementName=CheckBox, Path=IsChecked}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource ObsidianBackground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Can Improve Data Template -->
    <DataTemplate x:Key="CanImproveDataTemplate">
        <Border>
            <CheckBox Name="CheckBox" 
                      Style="{StaticResource ObsidianCheckBox}" 
                      IsChecked="{Binding CanImprove, Converter={StaticResource BooleanInverter}}"
                      IsThreeState="False"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"/>
        </Border>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True"/>
                    <Condition Binding="{Binding ElementName=CheckBox, Path=IsChecked}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource ObsidianBackground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding ElementName=CheckBox, Path=IsChecked}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource ObsidianBackground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Can Improve Data Template -->
    <DataTemplate x:Key="RequiresDisarmDataTemplate">
        <Border>
            <CheckBox Name="CheckBox" 
                      Style="{StaticResource ObsidianCheckBox}" 
                      IsChecked="{Binding RequiresDisarm}"
                      IsThreeState="False"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"/>
        </Border>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsMouseOver}" Value="True"/>
                    <Condition Binding="{Binding ElementName=CheckBox, Path=IsChecked}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource ObsidianBackground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding ElementName=CheckBox, Path=IsChecked}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource ObsidianBackground}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Staff Metadata Data Template -->
    <DataTemplate x:Key="StaffDataTemplate">
        <DockPanel>
            <Border Name="SelectionBorder"
                    DockPanel.Dock="Left"
                    Width="4"
                    Background="{DynamicResource ObsidianBackground}"
                    VerticalAlignment="Stretch"
                    Visibility="Hidden"/>
            <Border Name="Border" Padding="10,0">
                <Grid Margin="0,2,0,4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Name="NameText"
                               Text="{Binding Name}"
                               Style="{StaticResource ObsidianText}"
                               FontSize="16"
                               TextWrapping="WrapWithOverflow"
                               Margin="4,2"/>

                    <TextBlock Name="ClassText"
                               Grid.Row="1"
                               Text="{Binding Path=Class, Converter={StaticResource PlayerClassConverter}}"
                               Style="{StaticResource ObsidianText}"
                               Foreground="{StaticResource ObsidianInactive}"
                               FontSize="16"
                               TextWrapping="WrapWithOverflow"
                               Margin="4,2"
                               Opacity="0.75"/>

                    <TextBlock Name="MedeniaClassText"
                               Grid.Row="1"
                               Text="{Binding Path=Class, Converter={StaticResource PlayerClassConverter}, ConverterParameter=Medenia}"
                               Style="{StaticResource ObsidianText}"
                               Foreground="{StaticResource ObsidianInactive}"
                               FontSize="16"
                               TextWrapping="WrapWithOverflow"
                               Margin="4,2"
                               Opacity="0.75"
                               Visibility="Collapsed"/>

                    <TextBlock Name="LevelText"
                               Grid.Row="0"
                               Grid.RowSpan="2"
                               Grid.Column="1" 
                               Text="{Binding Level, StringFormat=Level {0}}"
                               Style="{StaticResource ObsidianText}"
                               FontSize="16"
                               TextWrapping="WrapWithOverflow"
                               Margin="8,2"
                               Opacity="0.55"/>

                    <TextBlock Name="AbilityLevelText"
                               Grid.Row="0"
                               Grid.RowSpan="2"
                               Grid.Column="1" 
                               Text="{Binding AbilityLevel, StringFormat=AB {0}}"
                               Style="{StaticResource ObsidianText}"
                               FontSize="16"
                               TextWrapping="WrapWithOverflow"
                               Margin="8,2"
                               Opacity="0.55"
                               Visibility="Collapsed"/>
                </Grid>
            </Border>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="0">
                <Setter TargetName="LevelText" Property="Text" Value="Any Level"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=AbilityLevel, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="LevelText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="ClassText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="AbilityLevelText" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MedeniaClassText" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Line Modifiers Data Template -->
    <DataTemplate x:Key="LineModifiersDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Name="SelectionBorder"
                    Background="{DynamicResource ObsidianBackground}"
                    Width="4"
                    VerticalAlignment="Stretch"
                    Visibility="Hidden"/>
            <Border Grid.Column="1" Name="Border"
                    BorderBrush="Transparent"
                    BorderThickness="2"
                    Padding="10,4">
                <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <ComboBox Name="ActionComboBox"
                                  Style="{StaticResource ObsidianComboBox}"
                                  ItemTemplate="{StaticResource StringDataTemplate}"
                                  Width="120" Height="34"
                                  SelectedItem="{Binding Path=Action, Mode=TwoWay}"
                                  Margin="4,6">
                            <meta:ModifierAction>Increase</meta:ModifierAction>
                            <meta:ModifierAction>Decrease</meta:ModifierAction>
                            <meta:ModifierAction>Set</meta:ModifierAction>
                        </ComboBox>

                        <ComboBox Name="ScopeComboBox"
                                  Style="{StaticResource ObsidianComboBox}"
                                  ItemTemplate="{StaticResource StringDataTemplate}"
                                  Width="120" Height="34"
                                  SelectedItem="{Binding Path=Scope, Mode=TwoWay}"
                                  BorderBrush="{Binding ElementName=ActionComboBox, Path=BorderBrush}"
                                  Margin="4,6">
                            <meta:ModifierScope>Single</meta:ModifierScope>
                            <meta:ModifierScope>Group</meta:ModifierScope>
                            <meta:ModifierScope>All</meta:ModifierScope>
                        </ComboBox>

                        <TextBox Name="ScopeTextBox"
                                 Style="{StaticResource ObsidianTextBox}"
                                 Width="120" Height="34"
                                 Text="{Binding Path=ScopeName, Mode=TwoWay}"
                                 BorderBrush="{Binding ElementName=ActionComboBox, Path=BorderBrush}"
                                 TextAlignment="Center"
                                 Margin="4,6"/>

                        <TextBlock Name="ConjunctionText"
                                   Style="{StaticResource ObsidianText}"
                                   FontSize="18"
                                   Text="by"
                                   Margin="4,6"/>

                        <ctl:NumericUpDown x:Name="ValueUpDown"
                                           Style="{StaticResource ObsidianNumericUpDown}"
                                           Width="80" Height="34"
                                           Value="{Binding Path=Value, Mode=TwoWay}"
                                           Minimum="0"
                                           Maximum="255"
                                           Margin="4,6"/>
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Style="{StaticResource ObsidianText}"
                                   Text="For Spells >= "
                                   Margin="4,6"/>
                        <ctl:NumericUpDown x:Name="MinThresholdUpDown"
                                           Width="80" Height="34"
                                           Style="{StaticResource ObsidianNumericUpDown}"
                                           Value="{Binding Path=MinThreshold, Mode=TwoWay}"
                                           BorderBrush="{Binding ElementName=ActionComboBox, Path=BorderBrush}"
                                           Minimum="0"
                                           Maximum="255"
                                           Margin="4,6"/>

                        <TextBlock Name="MinLinesText" 
                                   Style="{StaticResource ObsidianText}"
                                   Text="Lines"
                                   Margin="4,6"/>
                    </WrapPanel>
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Style="{StaticResource ObsidianText}"
                                   Text="For Spells &lt;= "
                                   Margin="4,6"/>
                        <ctl:NumericUpDown x:Name="MaxThresholdUpDown"
                                           Width="80" Height="34"
                                           Style="{StaticResource ObsidianNumericUpDown}"
                                           Value="{Binding Path=MaxThreshold, Mode=TwoWay}"
                                           BorderBrush="{Binding ElementName=ActionComboBox, Path=BorderBrush}"
                                           Minimum="0"
                                           Maximum="255"
                                           Margin="4,6"/>

                        <TextBlock Name="MaxLinesText" 
                                   Style="{StaticResource ObsidianText}"
                                   Text="Lines"
                                   Margin="4,6"/>
                    </WrapPanel>
                </StackPanel>
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Action}" Value="Set">
                <Setter TargetName="ConjunctionText" Property="Text" Value="to"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Scope}" Value="All">
                <Setter TargetName="ScopeTextBox" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding MinThreshold}" Value="1">
                <Setter TargetName="MinLinesText" Property="Text" Value="Line"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding MaxThreshold}" Value="1">
                <Setter TargetName="MaxLinesText" Property="Text" Value="Line"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>